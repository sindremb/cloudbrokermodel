<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
    <title></title>
    <script type="text/javascript" language="javascript" src="js/jquery-2.1.0.js"></script>
    <script type="text/javascript" language="javascript" src="js/knockout-3.0.0.js"></script>
    <script type="text/javascript" language="javascript" src="js/datagen.core.js"></script>
    <script type="text/javascript" language="javascript" src="js/datagen.utils.js"></script>
	<script type="text/javascript" language="javascript" src="js/datagen.viewmodels.js"></script>
    <script type="text/javascript" language="javascript" src="js/main.js"></script>
</head>
<body>
<script id="ArcViewModelTemplate" type="text/html">
<div class="ArcViewModel">
	Bandwidth Capacity = <input type="text" data-bind="value: bandwidthCap" /><br />
	Latency = <input type="text" data-bind="value: latency" /><br />
	Bandwidth Price = <input type="text" data-bind="value: bandwidthPrice" /><br />
	Exp. Availability = <input type="text" data-bind="value: expectedAvailability" /><br />
</div>
</script>
<script id="NodeViewModelTemplate" type="text/html">
<div class="NodeViewModel">
	Level = <input type="text" data-bind="value: level" /><br />
	Type = <input type="text" data-bind="value: nodeType" /><br />
</div>
</script>
<script id="UnknownTemplate" type="text/html">
<div class="Unknown">
	Unknown selected object
</div>
</script>
<script id="addnode-mode-desc" type="text/html">
Click location to add new node
</script>
<script id="view-mode-desc" type="text/html">
Click to select network elements
</script>
<div id="genConfigs">
	# node levels = <input type="text" data-bind="value: generationConfig().numNodeLevels" /><br />
	# nodes per cluster = <input type="text" data-bind="value: generationConfig().numNodesPerCluster" /><br />
	<!--# avg. arcs per node = <input type="text" data-bind="value: generationConfig().avgArcsPerNode" /><br />
    Number of nodes: <input type="text" data-bind="value: generationConfig().numberOfNodes" /><br />
    Number of arcs: <input type="text" data-bind="value: generationConfig().numberOfArcs" /><br />
	-->
    Number of leasable arcs: <input type="text" data-bind="value: generationConfig().numLeasableArcs" /><br />
    Number of customers: <input type="text" data-bind="value: generationConfig().numberOfCustomers" /><br />
    Number of providers: <input type="text" data-bind="value: generationConfig().numberOfProviders" /><br />
    Max number of services per customer: <input type="text" data-bind="value: generationConfig().maxNumberOfServicesPerCustomer" /><br />
    Proportion of eligible providers: <input type="text" data-bind="value: generationConfig().proportionEligibleProviders" /><br />
</div>
<div>
    <button data-bind="click: function() {generateRandomNetwork('dataOutputBox')}">Generate network</button>
</div>
<table>
<tr>
<td>
<div>
    <h3>Network data visualisation: </h3>
	<button data-bind="click: function() {$data.togglemode('addnode')}, style : {'border-style' : $data.mode() == 'addnode' ? 'inset' : ''}">Add Node</button>
	<button data-bind="click: function() {$data.dataVM().network().addArc()}">Add Arc</button>
</div>
<div height="20px" data-bind="template: {name: $data.mode()+'-mode-desc', data: $data}">
</div>
<div>
    <svg height="500" width="800" data-bind="click : function(d, e) {$data.mapclick(e);}">
		<g data-bind="foreach: dataVM().network().arcs">
			<line data-bind="attr: { x1: nodeFrom().x, y1: nodeFrom().y, x2: nodeTo().x, y2: nodeTo().y, stroke : selected() ? 'aqua' : 'black'}, click: function(d, e) {toggleSelect(e);}" style="stroke-width:4" />
		</g>
		<g data-bind="foreach: dataVM().network().leasableArcs">
			<line data-bind="attr: { x1: nodeFrom().x, y1: nodeFrom().y, x2: nodeTo().x, y2: nodeTo().y, stroke : selected() ? 'aqua' : 'blue'}, click: function(d, e) {toggleSelect(e);}" style="stroke-width:4" />
		</g>
		<g data-bind="foreach: dataVM().network().nodes">
			<circle data-bind="attr: { cx: x, cy: y, r: (15 / level()), fill: colour(), stroke : selected() ? 'aqua' : 'black'}, click: function(d, e) {toggleSelect(e);}" stroke="black" stroke-width="3" />
		</g>
		Sorry, your browser does not support inline SVG.  
	</svg> 
</div>
</td>
<td data-bind="if: dataVM().network().selectedObjects().length > 0">
	<div data-bind="template: {name: dataVM().network().selectedObjects()[0].getTemplate(), data: dataVM().network().selectedObjects()[0]}">
	</div>
</td>
<td data-bind="if: dataVM().network().selectedObjects().length == 0">
	Click To select objects
</td>
</tr>
</table>
<div>
    <button data-bind="click: function() {outputToMoselData('dataOutputBox')}">Output data file</button>
	<button data-bind="click: function() {parseMoselData($('#dataOutputBox').val())}">Load data file</button>
</div>
<div>
    <textarea id="dataOutputBox" rows="30" cols="150"></textarea>
</div>
</body>
</html>
