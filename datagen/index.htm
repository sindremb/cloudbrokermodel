<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
    <title></title>
    <script type="text/javascript" language="javascript" src="js/jquery-2.1.0.js"></script>
    <script type="text/javascript" language="javascript" src="js/knockout-3.0.0.js"></script>
    <script type="text/javascript" language="javascript" src="js/datagen.core.js"></script>
    <script type="text/javascript" language="javascript" src="js/datagen.utils.js"></script>
	<script type="text/javascript" language="javascript" src="js/datagen.models.js"></script>
	<script type="text/javascript" language="javascript" src="js/datagen.viewmodels.js"></script>
	<script type="text/javascript" language="javascript" src="js/datagen.bindingHandlers.js"></script>
    <script type="text/javascript" language="javascript" src="js/main.js"></script>
	<link rel="stylesheet" type="text/css" href="css/style.css">
</head>
<body>
<script id="ArcViewModelTemplate" type="text/html">
<div class="ArcViewModel">
	Bandwidth Capacity : <input type="text" data-bind="value: bandwidthCap" /><br />
	Latency : <input type="text" data-bind="value: latency" /><br />
	Bandwidth Price : <input type="text" data-bind="value: bandwidthPrice" /><br />
	Exp. Availability : <input type="text" data-bind="value: expectedAvailability" /><br />
</div>
</script>
<script id="NodeViewModelTemplate" type="text/html">
<div class="NodeViewModel">
	<b>Node #<span data-bind="text: nodeNumber"></span></b><br />
	Type : <span data-bind="text: nodeType" /><br />
	Level : <input type="text" data-bind="value: level" size="5"/><br />
	<div data-bind="with: content()">
		<b>Content:</b><br />
		<div data-bind="template: {name: getTemplate(), data: $data}"></div>
	</div>
	<div data-bind="if: content() == null">
		<button data-bind="click: function() {addCustomer()}">Add Customer</button><br>
		OR <br />
		<button data-bind="click: function() {addProvider()}">Add Provider</button><br>
	</div>
</div>
</script>
<script id="UnknownTemplate" type="text/html">
<div class="Unknown">
	Unknown selected object
</div>
</script>
<script id="CustomerViewModelTemplate" type="text/html">
<div class="CustomerViewModel">
	<b>Customer #<span data-bind="text: customerNumber"></span></b>
	<button data-bind="click: function() {owner().removeCustomer($data)}">Delete</button><br>
	Revenue : <input type="text" data-bind="value: revenue" size="5" /><br />
	<button data-bind="click: function() {addService()}">Add Service</button><br>
	<div data-bind="foreach: services">
		<div data-bind="template: {name: 'ServiceViewModelTemplate', data: $data}"></div>
	</div>
</div>
</script>
<script id="ServiceViewModelTemplate" type="text/html">
<div class="ServiceViewModel">
	<div>
		- <b>Service #<span data-bind="text: serviceNumber"></span></b>
		<button data-bind="click: function() {owner().removeService($data)}">Delete</button><br>
		- Requirements <br />
		-- Bandwidth  (UPLINK) : <input type="text" data-bind="value: bandwidthRequirementUp" size="5" /><br />
		-- Bandwidth  (DOWNLINK) : <input type="text" data-bind="value: bandwidthRequirementDown" size="5" /><br />
		-- Latency : <input type="text" data-bind="value: latencyRequirement" size="5" /><br />
		-- Availability : <input type="text" data-bind="value: availabilityRequirement" size="5" /><br />
	</div>
	-- Possible Placements:
	<div data-bind="foreach: placements">
		--- provider #<span data-bind="text: provider().providerNumber()"></span>
		Price: <input type="text" data-bind="value: price()"  size="5"/>
		<button data-bind="click: function() {$parent.removePlacement($data)}">Delete</button><br>
	</div>
	-- Additional providers:
	<div data-bind="foreach: nonPlaceableProviders">
		--- provider #<span data-bind="text: providerNumber()"></span>
		<button data-bind="click: function() {$parent.addPlacement($data, 100)}">Add</button><br>
	</div>
</div>
</script>
<script id="ProviderViewModelTemplate" type="text/html">
<div class="ProviderViewModel">
	Provider #<span data-bind="text: providerNumber"></span>
	<button data-bind="click: function() {owner().removeProvider($data)}">Delete</button><br>
</div>
</script>
<script id="addnode-mode-desc" type="text/html">
Click location to add a new node.
</script>
<script id="view-mode-desc" type="text/html">
Click elements to view and edit their contents.
</script>
<script id="edit-mode-desc" type="text/html">
Select elements to drag and drop or delete.
</script>
<script id="addarc-mode-desc" type="text/html">
Select two nodes to add an arc between.
</script>
<div>
    <button data-bind="click: function() {generateRandomNetwork('dataOutputBox')}">Generate network</button><span id="showconfigbutton" data-bind="click: function(){$('#genConfigs, #showconfigbutton').toggle()}">v settings v</span>
</div>
<div id="genConfigs" style="display: none;">
	# node levels = <input type="text" data-bind="value: generationConfig().numNodeLevels" /><br />
	# nodes per cluster = <input type="text" data-bind="value: generationConfig().numNodesPerCluster" /><br />
    Number of leasable arcs: <input type="text" data-bind="value: generationConfig().numLeasableArcs" /><br />
    Number of customers: <input type="text" data-bind="value: generationConfig().numberOfCustomers" /><br />
    Number of providers: <input type="text" data-bind="value: generationConfig().numberOfProviders" /><br />
    Max number of services per customer: <input type="text" data-bind="value: generationConfig().maxNumberOfServicesPerCustomer" /><br />
    Proportion of eligible providers: <input type="text" data-bind="value: generationConfig().proportionEligibleProviders" /><br />
	Avg arc latency: <input type="text" data-bind="value: generationConfig().avgArcLatency" /><br />
	Avg. service latency requirement: <input type="text" data-bind="value: generationConfig().avgServiceLatencyReq" /><br />
	<span data-bind="click: function(){$('#genConfigs, #showconfigbutton').toggle()}">^ hide ^</span>
</div>

<table class="editorTable">
<tr>
<td>
<div class="toolbarContainer" data-bind="with: mode">
	<h3>Network data visualisation: </h3>
	<button data-bind="click: function() {$parent.setMode('view')}, style : {'border-style' : $data == 'view' ? 'inset' : ''}">View</button>
	<button data-bind="click: function() {$parent.setMode('edit')}, style : {'border-style' : $data == 'edit' ? 'inset' : ''}">Edit</button>
	<button data-bind="click: function() {$parent.setMode('addnode')}, style : {'border-style' : $data == 'addnode' ? 'inset' : ''}">Add Node</button>
	<button data-bind="click: function() {$parent.setMode('addarc')}, style : {'border-style' : $data == 'addarc' ? 'inset' : ''}">Add Arc</button>

	<div height="20px" data-bind="template: {name: $data + '-mode-desc', data: $data}">
	</div>
</div>
<div class="visualisationContainer">
    <svg id="networksvg" height="500" width="800" data-bind="click : function(d, e) {$data.mapclick(e);}">
		<g data-bind="foreach: dataVM().network().arcs">
			<line 
				data-bind="
					attr: { 
						x1: nodeFrom().x, y1: nodeFrom().y, x2: nodeTo().x, y2: nodeTo().y,
						stroke : selected() ? 'aqua' : 'black'
					},
					click: function(d, e) {toggleSelect(e);}
				"
				style="stroke-width:4" />
		</g>
		<g data-bind="foreach: dataVM().network().leasableArcs">
			<line 
				data-bind="
					attr: { 
						x1: nodeFrom().x, y1: nodeFrom().y, x2: nodeTo().x, y2: nodeTo().y,
						stroke : selected() ? 'aqua' : 'blue'
					},
					click: function(d, e) {toggleSelect(e);}
				" 
				style="stroke-width:4" />
		</g>
		<g data-bind="foreach: dataVM().network().nodes">
			<circle 
				data-bind="
					attr: { 
						cx: x, cy: y, r: (15 / level()), 
						fill: (nodeType() == 'customer' ? 'red' : (nodeType() == 'provider' ? 'green' : 'gray')), 
						stroke : selected() ? 'aqua' : 'black'
					},
					click: function(d, e) {toggleSelect(e);},
					draggableElement: { x: x, y: y}
				" 
				stroke="black" stroke-width="3" />
			<text data-bind="
					attr: { 
						x: x()+8, y: y()+8, 
					},
					text: nodeNumber(),
					click: function(d, e) {toggleSelect(e);}
				" fill="black" style="font-size: 10px"></text>
		</g>
		Sorry, your browser does not support inline SVG.  
	</svg> 
</div>
</td>
<td>
	<div data-bind="if: selectedObjects().length > 0">
		<div class="selectedObjectsContainer" data-bind="foreach: selectedObjects">
			<div data-bind="template: {name: $data.getTemplate(), data: $data}">
			</div>
		</div>
	</div>
	<div data-bind="if: selectedObjects().length <= 0">
		<div class="selectedObjectsContainer">
			No objects selected..
		</div>
	</div>
</td>
	
</tr>
</table>
<div>
    <button data-bind="click: function() {outputToMoselData('dataOutputBox')}">Output data file</button>
	<button data-bind="click: function() {parseMoselData($('#dataOutputBox').val())}">Load data file</button>
	<button data-bind="click: function() {outputToJSON('dataOutputBox')}">Export to JSON</button>
<!--	<button data-bind="click: function() {
		window.open('data:text/txt;charset=utf-8,' + escape($('#dataOutputBox').val()));
	}">Download file</button>-->
</div>
<div>
    <textarea id="dataOutputBox" rows="30" cols="150"></textarea>
</div>
</body>
</html>
