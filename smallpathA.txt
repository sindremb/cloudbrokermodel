!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
! Data set: smallA
! - Small problem instance constructed to test model
! - Varied requirements for bandwidth and latency
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!

n_Customers: 3	! number of customers
n_Services: 5	! number of services in total
n_Providers: 2	! number of providers
n_Nodes: 10		! number of nodes in total (customer, internal and provider nodes)
n_Paths: 54		! number of paths generated

Symmetric: false ! indicates wether or not arc provided in dataset goes both ways

!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
! Customers, Services and Providers data
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!

! (c) Revenue from serving customer c
R_Revenue: [1800	2400	1400]

! (c) Set of services for customers c
S_ServiceForCustomer:	[
	[1	2]
	[3]
	[4	5]
]


C_PathCost: [ 50	200	300	157	978	1000	210	990	290	789	903	900	100	100	290	100	200	300	572	978	100	210	990	290	789	932	900	500	100	290	50	50	50	60	67	68	89	96	75	35	50	50	60	60	70	60	100	300	50	60	59	90	80	70
]
K_Paths:[
[1	3	5]	[2	4	6]
[25	27	29]	[26	28	30]
[7	9	11	13	15	17]	[10	12	14	16	18]
[19	21	23]	[20	22	24]
[31	33	35]	[32	34	36]
]

K_PathsDown:[
[37	38	39]	[40	41	42]
[43	44	45]	[46	47	48]
[49]	[50]
[51]	[52]
[53]	[54]

]
L_PathsUsingLink:[
	(1 4) [1	2	3	4	5	6	25	26	27	28	29	30]
	(2 4) [7	8	9	10	11	12]	(2 5) [13	14	15	16	17	18]	
	(3 5) [19	20	21	22	23	24	31	32	33	34	35	36]	
	(4 1) [37	38	39]	(4 2) [49]	(4 6) [1	2	3	4	25	26	27	28	7	8	9	10	11	12]	(4 7) [5	6	29	30	11	12]
	(5 2) [50]	(5 3) [51	52	53	54]	(5 6) [13	14	15	16	19	20	21	22	31	32	33	34]	(5 8) [23	24	35	36	17	18]	
	(6 4) [49	37	38	39	43	44	45]	(6 5) [51	52]	(6 7) [19	20	31	32	13	14	1	2	25	26]	(6 8) [3	4	27	28	9	10	21	22	33	34]
	(7 4) [45	47]	(7 6) [49	50]	(7 9) [1	25	5	29	7	11	13	19	31]	(7 10) [2	26	6	30	8	12	14	20	32]	
	(8 5) [8]	(8 6) [38	41	44	47]	(8 9) [3	27	9	17	15	21	33	23	35]	(8 10) [4	28	10	16	18	22	34	24	36]
	(9 7) [37 43	49	51	53]	(9 8) [38	44	49	51	53]
	(10 7) [42	48	49	52	54]	(10 8) [52	54	41	47]
]

U_PathBandwidthUsage: [
	49 49 49 49 49 49 49 49 49 49 49 49 49 49 49 49 49 49 49 49 49 49 49 49 49 49 49 29 39 49
	]

J_PathLatency: [10	20	3	4	10	10	7	80	10	10	10	20	3	6	5	4	10	2	3	4	5	60	7	8	10	10	10	20	30	6	5	4
	10	2	3	4	5	6	7	10	10	10	10	20	30	6	5	4	5	5	5	5	5	5
	]


G_LatencyReq: [
	100	20	50	80	10]
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
! Network data
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!

!!! Own network


! (i,j) Bandwidth capacity between nodes i and j
F_BandwidthCap: [
	(1 4) 50
	(2 4) 50	(2 5) 50	
	(3 5) 50	
	(4 1) 50	(4 2) 50	(4 6) 50	(4 7) 50
	(5 2) 50	(5 3) 50	(5 6) 50	(5 8) 50	
	(6 4) 50	(6 5) 50	(6 7) 50	(6 8) 50
	(7 4) 50	(7 6) 50	(7 9) 50	(7 10) 50	
	(8 5) 50	(8 6) 50	(8 9) 50	(8 10) 50
	(9 7) 50	(9 8) 50
	(10 7) 50	(10 8) 50
]

