!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!! 
! Data set: #34
! - Auto generated dataset by Cloud Broker Datagen v0.1 
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!

n_Customers: 6 ! number of customers
n_Services: 8 ! number of services in total
n_Providers: 4 ! number of providers
n_Nodes: 18 ! number of nodes in total (customer, internal and provider nodes)

Symmetric: true! indicates whether or not arc provided in dataset goes both ways

!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
! Customers, Services and Providers data
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!

! (c) Revenue from serving customer c
R_Revenue: [700 600 1100 500 2500 1600 ]

! (c) Set of services for customers c
S_ServicesForCustomer:	[
 [1 ]
 [2 ]
 [3 ]
 [4 ]
 [5 6 ]
 [7 8 ]
]

! (s) Required maximum latency for service s [old: from customer to provider (UPLINK)]
G_LatencyReq: [75 120 70 60 50 90 120 60 ]

! NOTE: DEPRECATED - no longer used, but kept for now for compatability
! (s) Required maximum latency for service s from provider to customer (DOWNLINK)
G_LatencyReqD: [75 120 70 60 50 90 120 60 ]

! (s) Required bandwidth for service s from customer to provider (UPLINK)
B_BandwidthReqUp: [10 13 30 12 35 35 12 22 ]

! (s) Required bandwith for service s from provider to customer (DOWNLINK)
B_BandwidthReqDown: [10 3 30 2 35 5 12 4 ]

Y_AvailabilityReq: [0.99 0.999 0.999 0.99 0.95 0.995 0.95 0.995 ]

! (s, p) Price of placing service s at provider p
H_PlacePrice: [
 (1 1) 180 (1 3) 220
 (2 2) 140 (2 4) 160
 (3 1) 380 (3 3) 450
 (4 2) 140 (4 4) 180
 (5 1) 450 (5 3) 590
 (6 2) 290 (6 4) 350
 (7 1) 250 (7 3) 280
 (8 2) 190 (8 4) 200
]

!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
! Network data
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!

!!! Own network

! (i,j) Latency for arc between nodes i and j
T_LinkLatency: [
 (9 15) 6 (15 10) 7 (10 8) 17 (8 7) 7 (7 9) 15 (9 10) 8 (8 14) 5 (14 13) 4 (13 7) 9 (12 8) 11 (11 7) 8 (11 12) 2 (9 16) 8 (10 16) 9 (2 12) 4 (3 13) 4 (4 14) 4 (1 11) 6 (7 17) 12 (8 17) 10 (6 12) 5 (6 11) 6 (5 13) 3 (5 14) 7 (18 7) 10 (18 8) 12]

! (i,j) Bandwidth capacity between nodes i and j
F_BandwidthCap: [
 (9 15) 51 (15 10) 149 (10 8) 56 (8 7) 62 (7 9) 73 (9 10) 128 (8 14) 108 (14 13) 71 (13 7) 70 (12 8) 64 (11 7) 68 (11 12) 75 (9 16) 130 (10 16) 65 (2 12) 104 (3 13) 145 (4 14) 96 (1 11) 107 (7 17) 133 (8 17) 101 (6 12) 137 (6 11) 120 (5 13) 111 (5 14) 147 (18 7) 88 (18 8) 132]

! (i,j) Price per unit of used own capacity between node i and j
K_CapPrice: [
 (9 15) 1 (15 10) 1 (10 8) 1.5 (8 7) 1 (7 9) 1.5 (9 10) 1 (8 14) 0.75 (14 13) 3 (13 7) 1.25 (12 8) 1.25 (11 7) 0.75 (11 12) 1 (9 16) 1 (10 16) 1 (2 12) 0.5 (3 13) 0.5 (4 14) 0.5 (1 11) 0.5 (7 17) 1 (8 17) 1 (6 12) 0.5 (6 11) 0.5 (5 13) 0.5 (5 14) 0.5 (18 7) 1 (18 8) 1]

D_AvailabilityExp: [
 (9 15) 0.97 (15 10) 0.99 (10 8) 0.95 (8 7) 0.9929484424530528 (7 9) 0.93 (9 10) 0.9942377589875833 (8 14) 0.95 (14 13) 0.9921007022354752 (13 7) 0.99 (12 8) 0.995 (11 7) 0.995 (11 12) 0.9940305969235487 (9 16) 0.99 (10 16) 0.99 (2 12) 0.9900674543739296 (3 13) 0.9968769988487475 (4 14) 0.9929222652618773 (1 11) 0.9914286249643192 (7 17) 0.995 (8 17) 0.995 (6 12) 0.95 (6 11) 0.95 (5 13) 0.99 (5 14) 0.99 (18 7) 0.95 (18 8) 0.95]

!!! Leasable network

! (i,j) Price per unit leased capacity between node i and j
L_LeasedPrice: [
]

! (i,j) Latency for leased link between nodes i and j
V_LeaseLatency: [
]

! (i,j) Capacity for leased link between nodes i and j
O_LeasedBandwidthCap:[
]

!!! Following data used purely by 'datagen': keep in file to allow easy editing

! X-coordinates of nodes
datagen_x_coords: [238 141 152 145 144 203 299 308 516 510 230 171 180 186 547 477 329 277 ]

! Y-coordinates of nodes
datagen_y_coords: [23 48 207 329 268 24 146 272 127 223 68 109 257 322 177 176 200 200 ]
